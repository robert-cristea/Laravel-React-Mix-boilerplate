<?php

namespace App\Models;

use App\Events\SendMessage;
use App\Events\SendStatus;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;

class Order extends Model
{
    use HasFactory;

    protected $table = 'orders';

    public $timestamps = false;

    public $fillable = ['customer','progress'];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::updated(function ($order){
            if ($order->isDirty('progress')){
                event(new SendStatus($order));
            }
        });

        static::created(function ($order){
//           event(new SendMessage());
           broadcast(new SendMessage($order->user->name))->toOthers();
        });
    }

    public function updateProgress($pro){
        $this->progress = $pro;
        $this->save();
    }

    public static function createOrder(){
        Order::create([
            'customer' => Auth::id(),
            'progress' => 'ordered'
        ]);
    }

    public function user(){
        return $this->belongsTo(User::class,'customer');
    }

}
